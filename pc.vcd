$date
	Thu Nov  1 20:36:49 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testPC $end
$var wire 32 ! PC [31:0] $end
$var reg 2 " S [1:0] $end
$var reg 1 # clk $end
$var reg 16 $ immediate [15:0] $end
$var reg 26 % jumpaddress [25:0] $end
$var reg 32 & regRs [31:0] $end
$scope module pc $end
$var wire 26 ' JumpAddress [25:0] $end
$var wire 2 ( S [1:0] $end
$var wire 1 # clk $end
$var wire 32 ) immediate [31:0] $end
$var wire 32 * regRs [31:0] $end
$var reg 32 + PC [31:0] $end
$var reg 32 , mux_out [31:0] $end
$var reg 32 - nextPC [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx -
b0 ,
b0 +
b0 *
b1010 )
b11 (
b10100 '
b0 &
b10100 %
b1010 $
0#
b11 "
b0 !
$end
#200000
b100 -
1#
#400000
b100 ,
b0 "
b0 (
0#
#600000
b1000 ,
b1000 -
b100 !
b100 +
1#
#800000
0#
#1000000
b1100 ,
b1100 -
b1000 !
b1000 +
1#
#1200000
0#
#1400000
b10000 ,
b10000 -
b1100 !
b1100 +
1#
#1600000
b11110 ,
b11 "
b11 (
b11110 &
b11110 *
0#
#1800000
b100010 -
b11110 !
b11110 +
1#
#2000000
0#
#2010000
